Script started on 2018-09-27 13:43:36-06:00
]0;ezra.guia1@csa3:~/Documents/CPSC355/Assignment1ezra.guia1@csa3:~/Documents/CPSC355/Assignment1$ gdb assign1a
GNU gdb (GDB) Fedora 8.1.1-3.fc28
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from assign1a...done.
(gdb) b main
Breakpoint 1 at 0x4005bc: file assign1a.s, line 10.
(gdb) display/i $pc
1: x/i $pc
<error: No registers.>
(gdb) run
Starting program: /home/ugb/ezra.guia1/Documents/CPSC355/Assignment1/assign1a 
warning: the debug information found in "/usr/lib/debug//usr/lib64/ld-2.27.so.debug" does not match "/lib/ld-linux-aarch64.so.1" (CRC mismatch).

Missing separate debuginfos, use: dnf debuginfo-install glibc-2.27-32.fc28.aarch64
warning: the debug information found in "/usr/lib/debug//lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).

warning: the debug information found in "/usr/lib/debug//usr/lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).


Breakpoint 1, main () at assign1a.s:10
10	main:	stp	x29,	x30,	[sp, -16]!
1: x/i $pc
=> 0x4005bc <main>:	stp	x29, x30, [sp, #-16]!
(gdb) ni
11		mov	x29,	sp
1: x/i $pc
=> 0x4005c0 <main+4>:	mov	x29, sp
(gdb) ni
13		mov	x19,	-6		//sets initial value of x
1: x/i $pc
=> 0x4005c4 <main+8>:	mov	x19, #0xfffffffffffffffa    	// #-6
(gdb) ni
14		mov	x28,	-5000		//sets initial max value
1: x/i $pc
=> 0x4005c8 <main+12>:	mov	x28, #0xffffffffffffec78    	// #-5000
(gdb) ni
test () at assign1a.s:16
16	test:	cmp	x19,	5		//tests current iteration
1: x/i $pc
=> 0x4005cc <test>:	cmp	x19, #0x5
(gdb) ni
17		b.gt	done			//finishes loop if x >= 5
1: x/i $pc
=> 0x4005d0 <test+4>:	b.gt	0x400630 <done>
(gdb) ni
19		mul	x20,	x19,	x19	//
1: x/i $pc
=> 0x4005d4 <test+8>:	mul	x20, x19, x19
(gdb) ni
20		mul	x20,	x20,	x19	//x^3
1: x/i $pc
=> 0x4005d8 <test+12>:	mul	x20, x20, x19
(gdb) ni
21		mul	x21,	x19,	x19	//x^2
1: x/i $pc
=> 0x4005dc <test+16>:	mul	x21, x19, x19
(gdb) ni
23		mov	x26,	-5		//temp reg to -5
1: x/i $pc
=> 0x4005e0 <test+20>:	mov	x26, #0xfffffffffffffffb    	// #-5
(gdb) ni
24		mul	x22,	x20,	x26	//value of -5x^3
1: x/i $pc
=> 0x4005e4 <test+24>:	mul	x22, x20, x26
(gdb) ni
25		mov	x26,	-31 		//temp reg to -31
1: x/i $pc
=> 0x4005e8 <test+28>:	mov	x26, #0xffffffffffffffe1    	// #-31
(gdb) ni
26		mul	x23,	x21,	x26	//value of -31x^2
1: x/i $pc
=> 0x4005ec <test+32>:	mul	x23, x21, x26
(gdb) ni
27		mov	x26,	4		//temp reg to 4
1: x/i $pc
=> 0x4005f0 <test+36>:	mov	x26, #0x4                   	// #4
(gdb) ni
28		mul	x24,	x19,	x26	//value of 4x
1: x/i $pc
=> 0x4005f4 <test+40>:	mul	x24, x19, x26
(gdb) ni
30		add	x25,	x22,	x23	//
1: x/i $pc
=> 0x4005f8 <test+44>:	add	x25, x22, x23
(gdb) ni
31		add	x25,	x25,	x24	//
n1: x/i $pc
=> 0x4005fc <test+48>:	add	x25, x25, x24
(gdb) ni
32		add	x25,	x25,	31	//result of y
1: x/i $pc
=> 0x400600 <test+52>:	add	x25, x25, #0x1f
(gdb) ni
34		cmp	x25,	x28		//compares y val and max
1: x/i $pc
=> 0x400604 <test+56>:	cmp	x25, x28
(gdb) ni
ni35		b.le	keep			//keeps current maximum value
1: x/i $pc
=> 0x400608 <test+60>:	b.le	0x400610 <keep>
(gdb) ni
37		mov	x28,	x25		//replaces values if comparison is false
1: x/i $pc
=> 0x40060c <test+64>:	mov	x28, x25
(gdb) p $x28
$1 = -5000
(gdb) p $x25
$2 = -29
(gdb) ni
keep () at assign1a.s:39
39	keep:	adrp	x0,	values
1: x/i $pc
=> 0x400610 <keep>:	adrp	x0, 0x400000
(gdb) p $x28
$3 = -29
(gdb) p $x25
$4 = -29
(gdb) c
Continuing.
The values: x: -6, y: -29 and max: -29
The values: x: -5, y: -139 and max: -29
The values: x: -4, y: -161 and max: -29
The values: x: -3, y: -125 and max: -29
The values: x: -2, y: -61 and max: -29
The values: x: -1, y: 1 and max: 1
The values: x: 0, y: 31 and max: 31
The values: x: 1, y: -1 and max: 31
The values: x: 2, y: -125 and max: 31
The values: x: 3, y: -371 and max: 31
The values: x: 4, y: -769 and max: 31
The values: x: 5, y: -1349 and max: 31
[Inferior 1 (process 10785) exited normally]
(gdb) q
]0;ezra.guia1@csa3:~/Documents/CPSC355/Assignment1ezra.guia1@csa3:~/Documents/CPSC355/Assignment1$ exit
exit

Script done on 2018-09-27 13:46:13-06:00
